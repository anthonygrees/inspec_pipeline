pipeline {
    agent {
        docker {
            reuseNode false
            args '-u root -v /var/run/docker.sock:/var/run/docker.sock'
            image 'chef/chefdk'
        }
    }
    triggers {
        pollSCM('H * * * *')
    }
    stages {
        stage('\u27A1 Create PR') {
            steps {
                sh '''test'''
            }
        }
        stage('\u27A1 InSpec Profile') {
            
            when {
                anyOf { branch 'master'; branch 'staging'; branch 'production' }
            }
            
            steps {
                parallel(
                    "InSpec.yml": {
                        sh '''test'''
                    },
                    "Controls": {
                        sh '''test'''
                    },
                    "Attributes": {
                        sh '''test'''
                    },
                    "ReadMe": {
                        sh '''test'''
                    },
                    "Libraries": {
                        sh '''test'''
                    },
                )
            }
        }
        stage('\u27A1 Syntax Check - InSpec Check') {
            steps {
                sh '''test'''
            }
        }
        stage('\u27A1 Lint Check - Rubocop') {
            steps {
                sh '''test'''
            }
        }
        stage('\u27A1 Code Review') {
            steps {
                sh '''test'''
            }
        }
        stage('\u27A1 Produce Archive') {
            
            when {
                anyOf { branch 'master'; branch 'staging'; branch 'production' }
            }
            
            steps {
                parallel(
                    "Produce zip/tarball archive": {
                        sh '''test'''
                    },
                    "Produce signed artifact": {
                        sh '''test'''
                    },
                )
            }
        }
        stage('\u27A1 Commit to Master') {
            
            when {
                branch 'production'
            }
            
            steps { 
                sh 'test'
            }
        }
    }
}
